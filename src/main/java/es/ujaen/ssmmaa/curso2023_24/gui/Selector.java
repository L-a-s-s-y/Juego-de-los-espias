/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.ujaen.ssmmaa.curso2023_24.gui;

import es.ujaen.ssmmaa.curso2023_24.agentes.AgenteOrganizador;
import es.ujaen.ssmmaa.elementos.Partida;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.File;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * @author salvador
 * 
 * Para agregar un juego nuevo, addJuego(String idJuego)
 * Para agregar una partida, addPartida(String idPartida)
 */
public class Selector extends javax.swing.JFrame {
    Map<String, DefaultListModel<String>> listaPartidas = new HashMap<>();
    DefaultListModel<String> listaJuegos = new DefaultListModel<>();
    private FinalizacionDialog finalizacion;
    private AgenteOrganizador myAgent;
    private JTextPane debug = new JTextPane();
    private JPanel panelBotonesPartidas;
    private ArrayList<JButton> botonesPartidas = new ArrayList<>();
    private Map<String, DefaultListModel<JButton>> listaBotonesPartidas = new HashMap<>();
    private Tablero tableroActivo;

    /**
     * Creates new form Partida
     */
    public Selector(AgenteOrganizador myAgent) {
        this.myAgent = myAgent;
        initComponents();
        juegos.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedKey = juegos.getSelectedValue();
                    if (listaPartidas.containsKey(selectedKey)){
                        DefaultListModel<String> selectedModel = listaPartidas.get(selectedKey);
                        partidas.setModel(selectedModel);
                        //añadir un boton que indique en curso o finalizada
                        DefaultListModel<JButton> botonSelected = listaBotonesPartidas.get(selectedKey);
                        botones.setModel(botonSelected);
                    }
                }
            }
        });

//        partidas.addListSelectionListener(new ListSelectionListener() {
//
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
//                if (!e.getValueIsAdjusting()) {
//                    String selectedKey = juegos.getSelectedValue();
//                    if (listaPartidas.containsKey(selectedKey)){
//                        DefaultListModel<String> selectedModel = listaPartidas.get(selectedKey);
//                        debug.setText("Partida: " + selectedModel);
//                    }
//                }
//            }
//        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Separador = new javax.swing.JSeparator();
        PanelJuegos = new javax.swing.JScrollPane();
        juegos = new javax.swing.JList<>(listaJuegos);
        PanelPartidas = new javax.swing.JScrollPane();
        partidas = new javax.swing.JList<>();
        cargador = new javax.swing.JButton();
        panelBotonesPartidas = new javax.swing.JPanel();
        //tableroActivo = new Tablero();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1600, 600));
        setMinimumSize(new java.awt.Dimension(1600, 600));
        setResizable(false);

        Separador.setOrientation(javax.swing.SwingConstants.VERTICAL);
        Separador.setMaximumSize(new java.awt.Dimension(3, 0));
        Separador.setMinimumSize(new java.awt.Dimension(3, 0));
        Separador.setName(""); // NOI18N

        //debug.setEditable(false);
        //debug.setSize(50, 50);



        PanelJuegos.setViewportView(juegos);

        partidas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Selecciona", "un", "juego", "primero" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        PanelPartidas.setViewportView(partidas);

        cargador.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        cargador.setText("Cargar partida");

        cargador.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    System.out.println("Partida seleccionada: " + selectedFile.getAbsolutePath());
                }
            }
        });

        JLabel topLabel = new JLabel("Juego de Espías VS Seguridad", SwingConstants.CENTER);
        topLabel.setFont(new java.awt.Font("Cantarell", 0, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(PanelJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(Separador, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(PanelPartidas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE)
//                .addGroup(layout.createSequentialGroup()
//                        .addComponent(debug, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(0, 25, Short.MAX_VALUE)
                )
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cargador, javax.swing.GroupLayout.DEFAULT_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(topLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Separador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelJuegos)
                    .addComponent(PanelPartidas, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    //.addComponent(debug)
                )
                .addGap(0, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cargador, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                botonFinActionPerformed();
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addJuego(String idJuego){
        listaJuegos.addElement(idJuego);
        listaPartidas.put(idJuego, new DefaultListModel<String>());
        listaBotonesPartidas.put(idJuego, new DefaultListModel<JButton>());
    }

    public void addPartida(String idJuego, String idPartida, Path dirPartida){
        if (listaPartidas.containsKey(idJuego)){
            //TODO: en vez de un string que sea un boton
            listaPartidas.get(idJuego).addElement(idPartida);
            listaBotonesPartidas.get(idJuego).addElement(new JButton(idPartida));
            //listaBotonesPartidas.get(idJuego).get(0).setText(idPartida + " en curso");
            //listaBotonesPartidas.get(idJuego).get(0).setBackground(new Color(255, 146, 51));
        }
    }

    private void botonFinActionPerformed() {
        finalizacion = new FinalizacionDialog(this, true, myAgent);
        finalizacion.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane PanelJuegos;
    private javax.swing.JScrollPane PanelPartidas;
    private javax.swing.JSeparator Separador;
    private javax.swing.JButton cargador;
    private javax.swing.JList<String> juegos;
    private javax.swing.JList<String> partidas;
    private javax.swing.JList<JButton> botones;

    // End of variables declaration//GEN-END:variables


}
